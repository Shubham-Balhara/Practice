--------------------------------------------------Question----------------------------------------------------------
You are given old touch smartphone numbers having dial pad and calculator app. 

Aim: The goal is to type a number on the dial pad. 

But as the phone is old, some of the numbers and some operations can't be touched. 
For eg. 2,3,5,9 keys are not responding, i.e you cannot use them 
But you can always make a number using other numbers and operations in Calculator.
There could be multiple ways of making a number 

Calculator have 1-9 and +,-,*,/,= as operations. Once you have made the number in Calculator you can copy the number and use it. 

You have to find the minimum number of touches required to obtain a number. 


#Input:# 
There will be multiple Test cases.Each test case will consist of 4 lines 
1) The first line will consist of N, M, O
N: no of keys working in Dialpad (out of 0,1,2,3,4,5,6,7,8,9) 
M:types of operations supported (+,-,*,/) 
O: Max no of touches allowed 

2) second line of input contains the digits that are working e.g 0,2,3,4,6. 
3) Third line contains the valued describing operations, 1(+),2(-),3(*),4(/) 

4) fourth line contains the number that we want to make . 

#Output:# 
Output contains 1 line printing the number of touches required to make the number 


#Sample Test Case:# 
1 // No of test cases 
5 3 5 // N ,M, O 
1 2 4 6 0 // digits that are working (total number of digits = N), 
1 2 3 // describing operations allowed (1--> '+', 2--> '-', 3--> '*' , 4--> '/' )(total number is equals to M) 
5 // number we want to make 


Answer 3 
How 4? 1+4=, "=" is also counted as a touch 



2nd Sample Case 
3 // No of Test cases 
6 4 5 // N ,M, O 
1 2 4 6 9 8 // digits that are working (total number of digits = N), 
1 2 3 4 // describing operations allowed (1--> +, 2--> -, 3--> , 4-->/) 
91 // number we want to make 
6 2 4 // 2nd test case 
0 1 3 5 7 9 
1 2 4 // +, -, / allowed here 
28 
5 2 10 
1 2 6 7 8 
2 3 // -, allowed 
981 

#Output:# 
2 // 91 can be made by directly entering 91 as 1,9 digits are working, so only 2 operations 
5// 35-7=, other ways are 1+3*7= 
9//62*16-11= 


Order of computation will be followed as symbols entered if + comes, it will be computed first 


One more example: let's say 1,4,6,7,8,9 works and +,-,* works. 
2,3,5 and / doesn't work. 
If you have to type 18-> 2 operations. (Each touch is considered an operation),br> If you have to type 5 -> '1+4=' 
that requires 4 operations. There could be other ways to make '5'.
----------------------------------------------------------code ---------------------------------------------------------------
#include<bits/stdc++.h>

using namespace std;
int n,m,o;
int * working,*operations;
int answer=INT_MAX;

int getValue(int prev,int curr,int op){
	if(prev==-10000000){
		return curr;
	} //mtlb prev kuch nhi hai toh curr hi hai jo h

	if(op==1){
		return prev+curr;
	}
	if(op==2){
		return prev-curr;
	}
	if(op==3){
		return prev*curr;
	}
	if(op==4){
		if(curr==0){
			return -1;
		}else{
			return prev/curr;
		}
	}
}

bool isDone(int prev,int curr,int Operation,int target){
	if(Operation==4 && curr==0){
		return false;
	}

	if(getValue(prev,curr,Operation)==target)
		return 1;
	return false;
}

void findMinTouch(int prev,int curr,int Operation,int touchesDone,int target){//operation ka mtlb jo operation ab hona hai prev and current p
	if(Operation!=-1 && curr!=-10000000){
		bool ans=isDone(prev,curr,Operation,target);//-1 ka mtlb nhi hua
		if(ans && touchesDone<o){
//			cout<<prev<<" "<<curr<<" "<<touchesDone+1<<endl;
			answer=min(answer,touchesDone+1);//1 equal k liye
		}
	}
	if(Operation!=-1 && curr==-10000000 && prev==target && touchesDone<o){
//		cout<<prev<<" "<<curr<<" "<<touchesDone<<endl;
		answer=min(answer,touchesDone);//1 add nhi hoga isme kyuki curr -10000000 hai mtlb koi operand dbaya hai to soch le = dbaya hai
	}
	if(Operation==-1 && curr==target && touchesDone<o){
//		cout<<prev<<" "<<curr<<" "<<touchesDone<<endl;
		answer=min(answer,touchesDone);
	}

	if(touchesDone>=o){
		return;
	}

	for(int i=0;i<m;i++){
		if(curr==-10000000)
			break;//isse phle hi koi operation wala button dba hai ab nhi dbaunga
		if(operations[i]==4 && curr==0){
			continue;
		}
		int value=getValue(prev,curr,Operation);
		findMinTouch(value,-10000000,operations[i],touchesDone+1,target);//mtlb current p abhi kuch nhi hai
	}//yha to hai ki mai operation perform krne k mn me hu

	for(int i=0;i<n;i++){
		if(curr==-10000000){
			findMinTouch(prev,working[i],Operation,touchesDone+1,target);
		}
		else{
			int val=abs(curr);
			val=val*10+working[i];
			if(curr<0){
				val*=-1;
			}
			findMinTouch(prev,val,Operation,touchesDone+1,target);
		}
	}

}
int main()
{
	int t;
	cin>>t;
	while(t--)
    {
		answer=INT_MAX;
		cin>>n>>m>>o;
		working=new int[n];
		for(int i=0;i<n;i++){
			cin>>working[i];
		}
		operations=new int[m+1];
		for(int i=0;i<m;i++){
			cin>>operations[i];
		}

		int target;
		cin>>target;

		findMinTouch(-10000000,-10000000,-1,0,target);//curr me abhi kuch na h mtlb -10000000
		cout<<answer<<endl;
	}
	return 0;
}
